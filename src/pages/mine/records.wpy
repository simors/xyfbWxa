<style lang="less">
  @import "../../styles/vars.less";

  .container-bg {
    background: #fff;
  }

  .radio-btn-view {
    padding: 34rpx 30rpx;
  }

  .radio-btn-group {
    display: flex;
    align-items: center;
    height: 50rpx;
    border: 1px solid @color-primary;
  }

  .radio-btn-checked {
    background: @color-primary;
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1;
    height: 100%;
  }

  .radio-btn-unchecked {
    background: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1;
    height: 100%;
  }

  .radio-btn-text-checked {
    font-size: 14px;
    color: #fff;
  }

  .radio-btn-text-unchecked {
    font-size: 14px;
    color: #696668;
  }

  .radio-btn {
    position: absolute;
    opacity: 0;
    background: transparent;
    width: 250rpx;
  }

  .more-view {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 32rpx;
  }

  .more-view-hidden {
    display: none;
  }
  
  .more-text {
    font-size: 12px;
    color: #696668;
  }
</style>
<template>
  <view class="container container-bg">
    <view class="radio-btn-view">
      <radio-group class="radio-btn-group" bindchange="typeChange">
        <view class="{{type === 'rcv' ? 'radio-btn-checked' : 'radio-btn-unchecked'}}">
          <radio value="rcv" class="radio-btn"/>
          <text class="{{type === 'rcv' ? 'radio-btn-text-checked' : 'radio-btn-text-unchecked'}}">领到的福包</text>
        </view>
        <view class="{{type === 'snd' ? 'radio-btn-checked' : 'radio-btn-unchecked'}}">
          <radio value="snd" class="radio-btn"/>
          <text class="{{type === 'snd' ? 'radio-btn-text-checked' : 'radio-btn-text-unchecked'}}">我发的福包</text>
        </view>
      </radio-group>
    </view>

    <view wx:if="{{type === 'rcv'}}">
      <repeat for="{{recvRdUsers}}" key="index" index="index" item="item">
        <friendItem :fubao.sync="item"/>
      </repeat>
      <view class="{{recvHasmore ? 'more-view' : 'more-view-hidden'}}" @tap.stop="clickLoadMoreRecvFubao">
        <text class="more-text">--- 加载更多 ---</text>
      </view>
    </view>
    <view wx:if="{{type === 'snd'}}">
      <repeat for="{{sendRdSet}}" key="index" index="index" item="item">
        <sndRedEnvelopItem :sndRe.sync="item"/>
      </repeat>
      <view class="{{sendHasmore ? 'more-view' : 'more-view-hidden'}}" @tap.stop="clickLoadMoreSendFubao">
        <text class="more-text">--- 加载更多 ---</text>
      </view>
    </view>
    <view style="height: 200rpx"/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Tips from '../../utils/Tips'
  import FriendItem from '../../components/friendItem'
  import SndRedEnvelopItem from '../../components/sndRedEnvelopItem'
  import fubao from '../../cloud/fubao'

  export default class Records extends wepy.page {
    config = {
      navigationBarTitleText: '福包记录',
      enablePullDownRefresh: false
    }

    components = {
      friendItem: FriendItem,
      sndRedEnvelopItem: SndRedEnvelopItem
    }

    data = {
      type: 'rcv',
      recvRdUsers: [],
      recvLastTime: null,
      recvHasmore: true,
      sendRdSet: [],
      sendLastTime: null,
      sendHasmore: true,
      limit: 10
    }

    computed = {
    }

    methods = {
      async typeChange(e) {
        this.type = e.detail.value
        if (this.type === 'rcv' && this.recvRdUsers.length == 0) {
          await this.loadRecvedFubaos()
        }
        if (this.type === 'snd' && this.sendRdSet.length == 0) {
          await this.loadSendFubaos()
        }
        this.$apply()
      },

      async clickLoadMoreRecvFubao() {
        await this.loadMoreRecvedFubaos()
        this.$apply()
      },

      async clickLoadMoreSendFubao() {
        await this.loadMoreSendFubaos()
        this.$apply()
      }
    }

    events = {
    }

    async loadRecvedFubaos() {
      Tips.loading()
      this.recvRdUsers = await fubao.fetchFetchRecvedFubao({limit: this.limit})
      Tips.loaded()
      let size = this.recvRdUsers.length
      if (size > 0) {
        this.recvLastTime = this.recvRdUsers[size-1].createdAt
      }
      if (size < this.limit) {
        this.recvHasmore = false
      }
    }

    async loadMoreRecvedFubaos() {
      Tips.loading()
      let newRecvRds = await fubao.fetchFetchRecvedFubao({lastTime: this.recvLastTime, limit: this.limit})
      Tips.loaded()
      let size = newRecvRds.length
      if (size > 0) {
        this.recvRdUsers.push(...newRecvRds)
        this.recvLastTime = newRecvRds[size-1].createdAt
      }
      if (size < this.limit) {
        this.recvHasmore = false
      }
    }

    async loadSendFubaos() {
      Tips.loading()
      this.sendRdSet = await fubao.fetchSendLuckyDip({limit: this.limit})
      Tips.loaded()
      let size = this.sendRdSet.length
      if (size > 0) {
        this.sendLastTime = this.sendRdSet[size-1].createdAt
      }
      if (size < this.limit) {
        this.sendHasmore = false
      }
    }

    async loadMoreSendFubaos() {
      Tips.loading()
      let newSendRds = await fubao.fetchSendLuckyDip({lastTime: this.sendLastTime, limit: this.limit})
      Tips.loaded()
      let size = newSendRds.length
      if (size > 0) {
        this.sendRdSet.push(...newSendRds)
        this.sendLastTime = newSendRds[size-1].createdAt
      }
      if (size < this.limit) {
        this.sendHasmore = false
      }
    }

    async onLoad() {
      await this.loadRecvedFubaos()
      this.$apply()
    }
  }
</script>
