<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .canvasStyle {
    width: 640rpx;
    height: 800rpx;
    background-color: #D14D00;
    border-radius: 40rpx
  }

  .gameBody {
    background-color: #F7680B;
    align-items: center;
    display: flex;
    flex-direction: column;
    padding: 5rpx;
  }

  .userinfo-avatar {
    width: 60rpx;
    height: 60rpx;
    border-radius: 30rpx;
    margin-right: 5rpx;
  }

  .gameBox {
    margin-left: 5rpx;
    margin-right: 5rpx;
    padding: 5rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 10rpx dotted yellow;
    border-radius: 40rpx;
    background-color: '#D14D00';
  }

  .gameContainer {
    background-color: #FF8B33;
    border-radius: 40rpx;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 5rpx;
  }

  .gameInfo {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 90%;
    padding: 10rpx;
  }

  .ownerInfo {
    display: flex;
    flex-direction: row;
    font-size: 40rpx;
    color: white;
    align-items: center;
    justify-content: center;
  }

  .userInfoRedNum {
    font-size: 28rpx;
    color: white;
  }

  .userInfoRedAmount {
    font-size: 40rpx;
    color: white;
  }

  .buttonWrap {
    display: flex;
    flex-direction: row;
    width: 90%;
    align-items: center;
    justify-content: center;
    margin-top: 40rpx;
    margin-bottom: 40rpx;
  }

  .backButton {
    width: 155rpx;
    height: 75rpx;
    border: 8px solid #FF8B33;
    background: #D14D00;
    align-items: center;
    color: white;
    justify-content: flex-start;
    border-radius: 60rpx;
    font-size: 28rpx;
    display: flex;
    margin-right: 10rpx;
  }

  .redButton {
    width: 340rpx;
    height: 122rpx;
    border: 6px solid #FDE808;
    border-radius: 100rpx;
    background: #D14D00;
    align-items: center;
    color: white;
    justify-content: flex-start;
    font-size: 56rpx;
    display: flex;
    margin-right: 10rpx;
    padding-left: 100rpx;
  }

  .redStart{
    margin-right: 10rpx;
  }

  .shareButton {
    width: 155rpx;
    height: 75rpx;
    border: 8px solid #FF8B33;
    background: #D14D00;
    align-items: center;
    color: white;
    justify-content: flex-start;
    border-radius: 60rpx;
    font-size: 28rpx;
    display: flex;
  }

  .redMark {
    width: 60rpx;
    height: 75rpx;
    margin-left: -10rpx;
  }

</style>
<template>
  <view class="container gameBody">
    <view class="gameContainer">
      <view class="gameInfo">
        <view class="ownerInfo">
          <image class="userinfo-avatar" src="{{userInfo.avatar}}"/>
          <text class="userInfoRedNum">{{userInfo.nickname}}发了{{luckyDip.count}}个福包</text>
        </view>
        <view class="ownerInfo">
          <image class="userinfo-avatar" src="../asset/png/game_money_mark.png"/>
          <text class="userInfoRedAmount">{{luckyDip.amount}}</text>
        </view>
      </view>
      <view class="gameBox">
        <canvas
            @tap="test"
            class="canvasStyle"
            canvas-id="first"
            disable-scroll=true

        ></canvas>
      </view>
    </view>
    <view class="buttonWrap">
      <view class="backButton" @tap="stop">
        <image class="redMark" src="../asset/png/game_home.png"/>
        <text >首页</text>
      </view>
      <view class="redButton" @touchstart="start" @touchend="ok">
        <text class="redStart">开始</text>
        <image class="redMark" src="../asset/png/game_start.png"/>
      </view>
      <view class="shareButton" @tap="stop">
        <image class="redMark" src="../asset/png/game_share.png"/>
        <text >分享</text>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  const xyfbGame = require('../yxfbGame/xyfbGame')
  import {WSS_DOMAIN, REQUEST_DRAW_LOTTERY} from '../utils/appConfig'
  import Tips from '../utils/Tips'
  import * as errno from '../utils/errno'
  import fubao from '../cloud/fubao'

  export default class GameFin extends wepy.page {
    config = {
      navigationBarTitleText: '幸运福包',
      enablePullDownRefresh: false
    }
    components = {}

    data = {
      userInfo: null,
      ctx: null,
      count: -1,
      walked: 0,
      isEnd: false,
      countStart: 3,
      countEnd: 3,
      wxCanvas: null,
      computeBoxTimer: null,
      renderBoxTimer: null,
      rectListLength: 14,
      xyfb: undefined,
      hasred: false,
      socketOpen: false,
      money: 0,
      luckyDip: null,
      rolling: false
    }


    methods = {
      async start(){
        if(!this.rolling){
          this.rolling = true
          try {
            let enable = await fubao.enableDrawLottery({luckyDipId: this.luckyDip.id})
            if (enable) {
              if (this.socketOpen) {
                this.sendDrawLotteryReq()
              } else {
                wx.connectSocket({
                  url: WSS_DOMAIN + 'operation/' + this.userInfo.id,
                  header:{
                    'content-type': 'application/json'
                  },
                  method:"POST"
                })
                wx.onSocketOpen((res) => {
                  this.socketOpen = true
                  this.sendDrawLotteryReq()
                  console.log('WebSocket连接重新打开！')
                })
              }
              this.countStart = 3
              this.countEnd = 3
              this.isEnd = false
              let xyfb = this.xyfb
              xyfb.changeEnd(this.isEnd, this.hasred)
              this.computeBox()
            }
          } catch (e) {
            console.log('e', e)
            switch (e.code) {
              case errno.ERROR_LUCKYDIP_GAME_OVER:
                Tips.error('所有福包被抢走')
                break
              case errno.ERROR_LUCKYDIP_EXPIRE:
                Tips.error('福包已过期')
                break
              case errno.ERROR_LUCKYDIP_PARTICIPANT_OVER:
                Tips.error('抽奖机会已用完')
                break
              default:
            }
          }
        }
      },

      test(){
      },

      ok(){
        this.isEnd = true
      },

      stop(){
        let xyfb = this.xyfb
        xyfb.stop()
      }

    }

    sendDrawLotteryReq() {
      wx.sendSocketMessage({
        data: JSON.stringify({
          type: REQUEST_DRAW_LOTTERY,
          userId: this.userInfo.id,
          luckyDipId: this.luckyDip.id
        })
      })
    }

    //计算格子
    computeBox() {
      if (!this.isEnd) {
        this.count = this.count + 1
        let walkedBox = this.count % this.rectListLength
        this.walked = walkedBox
        let xyfb = this.xyfb
        xyfb.changeWalked(this.walked)
        if (this.countStart < 0) {
          this.computeBoxTimer = setTimeout(() => {
            this.computeBox()
          }, 100)
        } else {
          this.countStart = this.countStart - 1
          this.computeBoxTimer = setTimeout(() => {
            this.computeBox()
          }, 500)
        }
      } else {
        if (this.countEnd < 0) {
          let xyfb = this.xyfb
          if(this.money!=0){
            this.hasred = true
          }
          this.rolling = false
          xyfb.changeEnd(this.isEnd, this.hasred)
        } else {
          this.count = this.count + 1
          let walkedBox = this.count % this.rectListLength
          this.walked = walkedBox
          let xyfb = this.xyfb
          xyfb.changeWalked(this.walked)
          this.countEnd = this.countEnd - 1
          this.computeBoxTimer = setTimeout(() => {
            this.computeBox()
          },500)
        }
      }
    }

    async onShow() {
      this.userInfo = await this.$parent.getUserInfo()
      let userId = this.userInfo.id
      wx.connectSocket({
        url: WSS_DOMAIN + 'operation/' + userId,
        header:{
          'content-type': 'application/json'
        },
        method:"POST"
      })
      wx.onSocketOpen((res) => {
        this.socketOpen = true
        console.log('WebSocket连接已打开！')
      })
      wx.onSocketError((res) => {
        this.socketOpen = false
        console.log('WebSocket连接打开失败，请检查！')
      })
      wx.onSocketMessage((res) => {
        let lottery = JSON.parse(res.data)
        if (lottery.errcode != 0) {
          switch (lottery.errcode) {
            case errno.ERROR_LUCKYDIP_GAME_OVER:
              Tips.error('所有福包被抢走')
              break
            case errno.ERROR_LUCKYDIP_EXPIRE:
              Tips.error('福包已过期')
              break
            case errno.ERROR_LUCKYDIP_PARTICIPANT_OVER:
              Tips.error('抽奖机会已用完')
              break
            default:
          }
          return
        }
        this.money = lottery.money
        console.log('收到服务器内容：money=' + this.money)
      })
      wx.onSocketClose((res) => {
        this.socketOpen = false
        console.log('WebSocket 已关闭！')
      })
      if(this.luckyDip){
        this.luckyDip = await fubao.fetchLuckyDipById({luckyDipId: this.luckyDip.id})
        let xyfb = this.xyfb
        xyfb.changeLuckyDip(this.luckyDip)
      }
      this.$apply()
    }

    async onLoad(option) {
      if (option.luckyDipId) {
        Tips.loading()
        this.luckyDip = await fubao.fetchLuckyDipById({luckyDipId: option.luckyDipId})
        this.luckyDip.amount = this.luckyDip.amount.toFixed(2)
        this.luckyDip.balance = this.luckyDip.balance.toFixed(2)
        console.log('luckyDip=====>',this.luckyDip)
        Tips.loaded()
      }
      var context = this.ctx = wx.createCanvasContext('first');
      let xyfb = this.xyfb = new xyfbGame({
        cxt: this.ctx,
        id: 'first',
        balance: 100.5,
        luckyDip: this.luckyDip
      })
      this.$apply()
    }

    onUnload() {
      wx.closeSocket()
    }
  }
</script>
