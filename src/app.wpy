<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import AV from './utils/av-weapp-min'
import user from './cloud/user'

// DEV
AV.init({
  appId: 'dHMtEcCm3jlfpRwRBzFvTATg-gzGzoHsz',
  appKey: '1gKH7vubIldeiHhvQXqpAuaK',
})

// PROD
//AV.init({
//  appId: 'L3Cae9l7aornoukXME6ycMFD-gzGzoHsz',
//  appKey: 'lH7LPYtJJLJjMnz2MHWrCmKz',
//})

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    debug: true
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  async getUserInfo() {
    let userInfo = this.globalData.userInfo
    if (userInfo) {
      return userInfo
    }
    let wepyUser = await user.userLogin()
    this.globalData.userInfo = wepyUser
    return wepyUser
  }

  async reloadUserInfo() {
    let userId = this.globalData.userInfo.id
    if (!userId) {
      return
    }
    this.globalData.userInfo = await user.fetchUserInfo({userId})
  }
}
</script>
